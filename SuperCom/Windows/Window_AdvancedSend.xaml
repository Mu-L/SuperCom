<super:BaseWindow
    x:Class="SuperCom.Window_AdvancedSend"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
    xmlns:config="clr-namespace:SuperCom.Config"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:super="https://github.com/SuperStudio/SuperControls"
    Title="{DynamicResource SendList}"
    Width="1000"
    Height="600"
    Background="{DynamicResource Window.Background}"
    Closing="BaseWindow_Closing"
    ContentRendered="BaseWindow_ContentRendered"
    Foreground="{DynamicResource Window.Foreground}"
    Icon="pack://application:,,,/Resources/Ico/ICON.ico"
    Loaded="BaseWindow_Loaded"
    WindowStartupLocation="CenterScreen"
    WindowStyle="None"
    mc:Ignorable="d">

    <super:BaseWindow.Resources>

        <ContextMenu x:Key="dataGridContextMenu">
            <MenuItem Header="{DynamicResource MoveToTop}" />
            <MenuItem Header="{DynamicResource MoveToBottom}" />
            <MenuItem Header="{DynamicResource Delete}" />
        </ContextMenu>

    </super:BaseWindow.Resources>
    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="auto" />
        </Grid.RowDefinitions>

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition
                    Width="auto"
                    MinWidth="150"
                    MaxWidth="500" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Grid
                Grid.Column="2"
                Width="500"
                Height="400"
                Margin="10,50"
                HorizontalAlignment="Right"
                VerticalAlignment="Top"
                Panel.ZIndex="10"
                Opacity="{Binding ElementName=logSlider, Path=Value}"
                Visibility="{Binding ElementName=showLogCheckBox, Path=IsChecked, Converter={StaticResource BoolToVisibilityConverter}}">

                <Border Effect="{StaticResource PopupDropShadowEffect}" Style="{StaticResource InfoBorder}" />

                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <WrapPanel Margin="10,10,10,0" Orientation="Horizontal">
                        <Button
                            Click="HideLogGrid"
                            Content="{DynamicResource Hide}"
                            Style="{StaticResource ButtonPrimary}" />
                        <Button
                            Click="ClearLogGrid"
                            Content="{DynamicResource ClearAll}"
                            Style="{StaticResource ButtonDanger}" />
                        <CheckBox
                            x:Name="logAutoWrap"
                            VerticalAlignment="Center"
                            super:CheckBoxExt.HookWidth="10"
                            super:CheckBoxExt.MarkHeight="16"
                            super:CheckBoxExt.MarkWidth="16"
                            Content="{DynamicResource AutoWrap}"
                            FontSize="14"
                            IsChecked="{Binding LogAutoWrap, Mode=TwoWay}"
                            Style="{StaticResource NormalCheckBox}" />
                        <TextBlock
                            Margin="10,0,0,0"
                            VerticalAlignment="Center"
                            FontSize="14"
                            Style="{StaticResource BaseTextBlock}"
                            Text="{DynamicResource Opacity}" />
                        <super:Slider
                            Name="logSlider"
                            Width="100"
                            VerticalAlignment="Center"
                            Integer="False"
                            LargeChange="0.2"
                            Maximum="1"
                            Minimum="0.5"
                            SmallChange="0.1"
                            Value="{Binding LogOpacity, Mode=TwoWay}" />
                    </WrapPanel>

                    <Border
                        Grid.Row="1"
                        Margin="10,5,10,10"
                        Background="{DynamicResource Window.Side.Background}"
                        Style="{StaticResource InfoBorder}">
                        <avalonEdit:TextEditor
                            Name="logTextBox"
                            Padding="5"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            VerticalContentAlignment="Top"
                            Background="Transparent"
                            ContextMenu="{StaticResource CopyContextMenu}"
                            Foreground="{DynamicResource Window.Foreground}"
                            HorizontalScrollBarVisibility="Auto"
                            IsReadOnly="True"
                            SyntaxHighlighting="ComLog"
                            WordWrap="{Binding Path=IsChecked, ElementName=logAutoWrap}" />
                    </Border>


                </Grid>
                <Grid />

            </Grid>


            <Grid Background="{DynamicResource Window.Side.Background}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <StackPanel IsEnabled="{Binding RunningCommands, Converter={StaticResource OppositeBooleanConverter}}" Orientation="Horizontal">
                    <super:HoverPath
                        Click="AddNewProject"
                        Style="{StaticResource AddHoverPath}"
                        ToolTip="{DynamicResource Add}" />
                </StackPanel>
                <!--  SelectedIndex="{Binding Path=SideIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  -->

                <super:SearchBox
                    x:Name="projectSearchBox"
                    Grid.Row="1"
                    Margin="0,5,0,10"
                    Background="{DynamicResource Window.Title.Background}"
                    PlaceHolder=""
                    Search="SearchProjectByName"
                    SearchOnTextChanged="True"
                    ShowSearchButton="True"
                    Style="{StaticResource SearchBoxStyle}" />
                <ListBox
                    Name="sideListBox"
                    Grid.Row="2"
                    Margin="0,0,1,0"
                    VerticalAlignment="Top"
                    HorizontalContentAlignment="Stretch"
                    d:ItemsSource="{d:SampleData ItemCount=5}"
                    Background="Transparent"
                    IsEnabled="{Binding DataContext.RunningCommands, Converter={StaticResource OppositeBooleanConverter}, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                    ItemContainerStyle="{StaticResource NormalListBoxItem}"
                    ItemsSource="{Binding CurrentProjects}"
                    SelectionChanged="ListBox_SelectionChanged"
                    Style="{StaticResource NormalListBox}">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid Background="Transparent" Tag="{Binding ProjectID, Mode=OneWay}">
                                <Grid.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Click="RenameProject" Header="{DynamicResource Raname}" />
                                        <MenuItem
                                            super:CommonExt.HoverBackground="{DynamicResource Menu.Hover.Deep.Background}"
                                            Click="DeleteProjectInMenuItem"
                                            Header="{DynamicResource Delete}"
                                            Tag="{Binding ProjectID}" />
                                    </ContextMenu>
                                </Grid.ContextMenu>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="auto" />
                                </Grid.ColumnDefinitions>
                                <TextBlock
                                    Grid.Column="0"
                                    Padding="5,0,0,0"
                                    HorizontalAlignment="Left"
                                    Background="Transparent"
                                    Style="{StaticResource BaseTextBlock}"
                                    Text="{Binding ProjectName}" />
                                <TextBox
                                    Grid.Column="0"
                                    Margin="4,0,0,0"
                                    Padding="5,0,0,0"
                                    HorizontalAlignment="Stretch"
                                    Background="{DynamicResource ListBoxItem.Selected.Active.Background}"
                                    LostFocus="RenameTextBoxLostFocus"
                                    PreviewKeyUp="TextBox_PreviewKeyUp"
                                    Style="{StaticResource BaseTextBox}"
                                    Tag="{Binding ProjectID}"
                                    Text="{Binding ProjectName, Mode=OneWay}"
                                    TextAlignment="Left"
                                    Visibility="Hidden" />

                                <super:HoverPath
                                    Grid.Column="1"
                                    Width="20"
                                    Height="20"
                                    Margin="5"
                                    HorizontalAlignment="Right"
                                    Click="DeleteProject"
                                    Style="{StaticResource CloseExHoverPath}"
                                    Tag="{Binding ProjectID}" />

                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </Grid>
            <GridSplitter
                Grid.Column="1"
                Width="4"
                HorizontalAlignment="Left"
                Panel.ZIndex="10"
                Style="{StaticResource HoverSpliter}" />

            <Grid Grid.Column="2" Visibility="{Binding ShowCurrentSendCommand, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="auto" />
                </Grid.RowDefinitions>

                <Border
                    Grid.Row="0"
                    Margin="10"
                    Padding="4,2"
                    VerticalAlignment="Center"
                    Background="{DynamicResource Window.Title.Background}"
                    CornerRadius="3">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Button
                            Grid.Column="0"
                            Width="25"
                            Height="25"
                            Margin="0"
                            Padding="0"
                            VerticalAlignment="Top"
                            super:CommonExt.CornerRadius="5"
                            super:CommonExt.HoverBackground="{DynamicResource Window.Title.Hover.Background}"
                            Click="StartCommands"
                            IsEnabled="{Binding RunningCommands, Converter={StaticResource OppositeBooleanConverter}}"
                            Style="{StaticResource FlatButton}">
                            <Viewbox
                                Width="12"
                                Height="auto"
                                VerticalAlignment="Center">
                                <Path
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Data="M128 138.666667c0-47.232 33.322667-66.666667 74.176-43.562667l663.146667 374.954667c40.96 23.168 40.853333 60.8 0 83.882666L202.176 928.896C161.216 952.064 128 932.565333 128 885.333333v-746.666666z"
                                    Effect="{StaticResource PopupDropShadowEffect}">
                                    <Path.Style>
                                        <Style TargetType="Path">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}}" Value="False">
                                                    <Setter Property="Fill" Value="Gray" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}}" Value="True">
                                                    <Setter Property="Fill" Value="#99E699" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Path.Style>
                                </Path>
                            </Viewbox>
                        </Button>

                        <Button
                            Grid.Column="1"
                            Width="25"
                            Height="25"
                            Margin="0"
                            Padding="0"
                            VerticalAlignment="Top"
                            super:CommonExt.CornerRadius="5"
                            super:CommonExt.HoverBackground="{DynamicResource Window.Title.Hover.Background}"
                            Click="StopCommands"
                            IsEnabled="{Binding RunningCommands}"
                            Style="{StaticResource FlatButton}">

                            <Viewbox
                                Width="12"
                                Height="auto"
                                Margin="6,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center">
                                <Path
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Data="M128 128m53.333333 0l661.333334 0q53.333333 0 53.333333 53.333333l0 661.333334q0 53.333333-53.333333 53.333333l-661.333334 0q-53.333333 0-53.333333-53.333333l0-661.333334q0-53.333333 53.333333-53.333333Z"
                                    Effect="{StaticResource PopupDropShadowEffect}">
                                    <Path.Style>
                                        <Style TargetType="Path">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}}" Value="False">
                                                    <Setter Property="Fill" Value="Gray" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}}" Value="True">
                                                    <Setter Property="Fill" Value="#C85860" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Path.Style>
                                </Path>
                            </Viewbox>
                        </Button>
                        <CheckBox
                            Name="showLogCheckBox"
                            Grid.Column="2"
                            Margin="4"
                            VerticalAlignment="Top"
                            super:CheckBoxExt.HookWidth="10"
                            super:CheckBoxExt.MarkHeight="16"
                            super:CheckBoxExt.MarkWidth="16"
                            Content="{DynamicResource ShowLog}"
                            FontSize="12"
                            IsChecked="{Binding ShowLogGrid, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            Style="{StaticResource NormalCheckBox}" />


                        <ItemsControl
                            Grid.Column="3"
                            Margin="5,0"
                            ItemsSource="{Binding SideComPortSelected}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <CheckBox
                                        Margin="4"
                                        VerticalContentAlignment="Center"
                                        super:CheckBoxExt.HookWidth="10"
                                        super:CheckBoxExt.MarkHeight="16"
                                        super:CheckBoxExt.MarkWidth="16"
                                        Checked="CheckBox_Checked"
                                        Content="{Binding Key.Name}"
                                        FontSize="12"
                                        IsChecked="{Binding Value, Mode=OneWay}"
                                        Style="{StaticResource NormalCheckBox}"
                                        Unchecked="CheckBox_Unchecked" />
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>



                    </Grid>
                </Border>

                <StackPanel Grid.Row="1" Orientation="Horizontal">
                    <Button
                        Height="30"
                        Margin="10,5"
                        Click="AddNewSendCommand"
                        Content="{DynamicResource AddCommand}" />
                    <Button
                        Height="30"
                        Margin="5"
                        Click="InsertNewSendCommand"
                        Content="{DynamicResource InsertCommand}" />

                    <StackPanel Orientation="Horizontal" Visibility="{Binding RunningCommands, Converter={StaticResource BoolToVisibilityConverter}}">
                        <TextBlock
                            Margin="5,0"
                            Style="{StaticResource BaseTextBlock}"
                            Text="{DynamicResource Opacity}" />

                        <super:Slider
                            Width="150"
                            Margin="5,0"
                            Integer="False"
                            LargeChange="0.2"
                            Maximum="1"
                            Minimum="0.5"
                            SmallChange="0.1"
                            ValueChanged="Slider_ValueChanged"
                            Value="{Binding WindowOpacity, Mode=OneWay}" />

                    </StackPanel>

                    <TextBlock Style="{StaticResource BaseTextBlock}" Text="{DynamicResource CompensationDelay}" />
                    <super:HoverPath
                        Width="23"
                        Height="23"
                        Style="{StaticResource HelpHoverPath}"
                        ToolTip="{DynamicResource CompensationDelayHint}" />
                    <super:Switch
                        Height="25"
                        Background="{DynamicResource Window.Title.Background}"
                        IsChecked="{Binding EnableSendCompensation, Source={x:Static config:ConfigManager.AdvancedSendSettings}}" />
                    <super:SearchBox
                        Width="80"
                        Height="25"
                        ShowClearButton="False"
                        Text="{Binding SendCompensation, Source={x:Static config:ConfigManager.AdvancedSendSettings}, Mode=TwoWay}"
                        TextAlignment="Center"
                        Visibility="{Binding EnableSendCompensation, Source={x:Static config:ConfigManager.AdvancedSendSettings}, Converter={StaticResource BoolToVisibilityConverter}}" />
                    <TextBlock
                        Style="{StaticResource BaseTextBlock}"
                        Text="ms"
                        Visibility="{Binding EnableSendCompensation, Source={x:Static config:ConfigManager.AdvancedSendSettings}, Converter={StaticResource BoolToVisibilityConverter}}" />
                </StackPanel>


                <DataGrid
                    Name="dataGrid"
                    Grid.Row="2"
                    Margin="5,0"
                    HorizontalContentAlignment="Left"
                    CanUserResizeColumns="True"
                    CanUserSortColumns="True"
                    ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                    SelectionChanged="dataGrid_SelectionChanged"
                    Style="{DynamicResource FlatDataGrid}">
                    <DataGrid.RowStyle>
                        <Style BasedOn="{StaticResource NormalDataGridRowStyle}" TargetType="DataGridRow">
                            <Setter Property="ContextMenu" Value="{x:Null}" />
                            <!--<Setter Property="ContextMenu" Value="{StaticResource dataGridContextMenu}" />-->
                        </Style>
                    </DataGrid.RowStyle>
                    <DataGrid.Columns>
                        <DataGridTemplateColumn
                            Width="auto"
                            MinWidth="40"
                            Header="{DynamicResource Operate}">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Border
                                        Grid.Column="1"
                                        Background="Transparent"
                                        BorderBrush="{StaticResource TabItem.Selected.Background}">

                                        <super:HoverPath
                                            Width="20"
                                            Height="20"
                                            HorizontalAlignment="Right"
                                            Click="DeleteCommand"
                                            Style="{StaticResource CloseExHoverPath}"
                                            Tag="{Binding CommandID, Mode=OneWay}" />


                                    </Border>


                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn
                            Width="auto"
                            MinWidth="40"
                            Header="{DynamicResource Status}"
                            SortMemberPath="Status">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="auto" />
                                            <ColumnDefinition Width="auto" />
                                        </Grid.ColumnDefinitions>
                                        <Border
                                            Grid.Column="0"
                                            Width="10"
                                            Height="10"
                                            Margin="5,0"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            CornerRadius="5">
                                            <Border.Style>
                                                <Style TargetType="Border">

                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Status, Mode=OneWay}" Value="WaitingToRun">
                                                            <Setter Property="Background" Value="Gray" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Status, Mode=OneWay}" Value="WaitingDelay">
                                                            <Setter Property="Background" Value="Yellow" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Status, Mode=OneWay}" Value="AlreadySend">
                                                            <Setter Property="Background" Value="Green" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Border.Style>
                                        </Border>

                                        <TextBlock
                                            Grid.Column="1"
                                            MinWidth="50"
                                            VerticalAlignment="Center"
                                            Style="{StaticResource BaseTextBlock}"
                                            Text="{Binding StatusText, Mode=OneWay}"
                                            TextAlignment="Left" />
                                    </Grid>

                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn
                            Width="auto"
                            MinWidth="40"
                            Header="{DynamicResource Order}"
                            SortMemberPath="Order">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <super:SearchBox
                                        MinWidth="50"
                                        MaxWidth="100"
                                        Background="Transparent"
                                        LostFocus="SaveSendCommands"
                                        ShowClearButton="False"
                                        TextAlignment="Center"
                                        Text="{Binding Order, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        TextChanged="CommandTextChanged" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn
                            Width="auto"
                            MinWidth="50"
                            Header="{DynamicResource Title}"
                            SortMemberPath="Order">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <super:SearchBox
                                        MinWidth="100"
                                        MaxWidth="150"
                                        Background="Transparent"
                                        LostFocus="SaveSendCommands"
                                        PlaceHolder="{DynamicResource PleaseEnter}"
                                        Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        TextChanged="CommandTextChanged" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>




                        <DataGridTemplateColumn
                            Width="auto"
                            MinWidth="60"
                            SortMemberPath="Delay">
                            <DataGridTemplateColumn.Header>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock VerticalAlignment="Center" Text="{DynamicResource DelayUnit}" />
                                    <super:HoverPath
                                        Width="23"
                                        Height="23"
                                        Style="{StaticResource HelpHoverPath}"
                                        ToolTip="{DynamicResource CompensationDelayHint}" />
                                </StackPanel>
                            </DataGridTemplateColumn.Header>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <super:SearchBox
                                        MinWidth="90"
                                        MaxWidth="150"
                                        Background="Transparent"
                                        LostFocus="SaveSendCommands"
                                        Text="{Binding Delay, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        TextChanged="CommandTextChanged" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>





                        <DataGridTemplateColumn
                            x:Name="col"
                            Width="*"
                            Header="{DynamicResource Command}"
                            SortMemberPath="Command">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>

                                        <super:HoverPath
                                            Grid.Column="0"
                                            Margin="0,0,5,0"
                                            Click="CopyCommand"
                                            Style="{StaticResource CopyHoverPath}" />


                                        <Border
                                            Grid.Column="1"
                                            Width="{Binding ElementName=col, Path=ActualWidth, Converter={StaticResource BiggerWidthConverter}, ConverterParameter=-200}"
                                            Margin="0"
                                            Padding="0,0,60,0"
                                            Background="Transparent">
                                            <super:SearchBox
                                                Margin="0,5"
                                                LostFocus="SaveSendCommands"
                                                PlaceHolder="{DynamicResource PleaseEnter}"
                                                Style="{StaticResource SearchTextBoxStyle}"
                                                Text="{Binding Command, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                TextChanged="CommandTextChanged" />
                                        </Border>
                                    </Grid>

                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>


                        <DataGridTemplateColumn
                            Width="120"
                            Header="返回字符检测"
                            Visibility="Collapsed">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid IsEnabled="{Binding DataContext.RunningCommands, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Converter={StaticResource OppositeBooleanConverter}}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="auto" />
                                            <ColumnDefinition Width="auto" />
                                        </Grid.ColumnDefinitions>
                                        <Button
                                            Name="btn"
                                            Grid.Column="1"
                                            Margin="5,0"
                                            BorderBrush="{DynamicResource Button.Selected.BorderBrush}"
                                            Click="ShowEditPopup"
                                            Content="{DynamicResource Edit}"
                                            FontSize="10"
                                            Style="{StaticResource BorderButton}" />
                                        <CheckBox
                                            VerticalAlignment="Center"
                                            super:CheckBoxExt.HookWidth="10"
                                            super:CheckBoxExt.MarkHeight="15"
                                            super:CheckBoxExt.MarkWidth="15"
                                            Click="SaveSendCommands"
                                            Content="{DynamicResource Enable}"
                                            FontSize="10"
                                            IsChecked="{Binding IsResultCheck, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            Style="{StaticResource NormalCheckBox}" />

                                        <Popup
                                            Width="350"
                                            Height="200"
                                            AllowsTransparency="True"
                                            HorizontalOffset="-5"
                                            Placement="Bottom"
                                            PlacementTarget="{Binding ElementName=btn}"
                                            PopupAnimation="Fade"
                                            StaysOpen="False"
                                            VerticalOffset="-5">
                                            <Grid>
                                                <Border
                                                    Margin="5"
                                                    Background="{DynamicResource Menu.Background}"
                                                    CornerRadius="5"
                                                    Effect="{StaticResource PopupDropShadowEffect}" />
                                                <Grid Margin="10">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="*" />
                                                        <RowDefinition Height="auto" />
                                                        <RowDefinition Height="auto" />
                                                    </Grid.RowDefinitions>
                                                    <Border
                                                        Grid.Row="0"
                                                        Margin="5"
                                                        Padding="5"
                                                        Background="{DynamicResource Window.Title.Background}"
                                                        CornerRadius="3">
                                                        <TextBox
                                                            HorizontalAlignment="Stretch"
                                                            ContextMenu="{StaticResource TextBoxContextMenu}"
                                                            LostFocus="SaveSendCommands"
                                                            ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                                            ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                            Style="{StaticResource MultiLineTextBox}"
                                                            Text="{Binding RecvResult, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                            TextAlignment="Left"
                                                            TextChanged="CommandTextChanged"
                                                            TextWrapping="NoWrap" />
                                                    </Border>

                                                    <StackPanel Grid.Row="1" Orientation="Horizontal">
                                                        <TextBlock Style="{StaticResource BaseTextBlock}" Text="{DynamicResource TimeoutUnit}" />
                                                        <Border
                                                            Grid.Row="2"
                                                            Margin="5"
                                                            Padding="5"
                                                            VerticalAlignment="Center"
                                                            Background="{DynamicResource Window.Title.Background}"
                                                            CornerRadius="2">
                                                            <TextBox
                                                                MinWidth="40"
                                                                Background="Transparent"
                                                                ContextMenu="{StaticResource TextBoxContextMenu}"
                                                                FontSize="12"
                                                                LostFocus="SaveSendCommands"
                                                                Style="{StaticResource MultiLineTextBox}"
                                                                Text="{Binding RecvTimeOut, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                                TextAlignment="Left"
                                                                TextChanged="CommandTextChanged" />
                                                        </Border>
                                                    </StackPanel>
                                                    <Border
                                                        Grid.Row="2"
                                                        Margin="5"
                                                        Background="{DynamicResource Window.Title.Background}"
                                                        BorderBrush="{DynamicResource Control.Disabled.Background}"
                                                        BorderThickness="5,0,0,0">
                                                        <TextBlock
                                                            FontSize="12"
                                                            Foreground="{DynamicResource Window.Sub.Foreground}"
                                                            Style="{StaticResource BaseTextBlock}"
                                                            Text="发送命令后会检测上述字符串是否返回（回车分割）"
                                                            TextAlignment="Left" />
                                                    </Border>
                                                </Grid>
                                            </Grid>
                                        </Popup>
                                    </Grid>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>


                </DataGrid>

                <Button
                    Grid.Row="3"
                    MinWidth="100"
                    Margin="10"
                    HorizontalAlignment="Right"
                    Click="SaveChanges"
                    Content="{DynamicResource Save}"
                    Style="{StaticResource ButtonSuccess}"
                    Visibility="Collapsed" />
            </Grid>
        </Grid>

        <Grid Grid.Row="1" Background="{DynamicResource Window.Title.Background}">
            <StackPanel
                Margin="5"
                HorizontalAlignment="Right"
                Orientation="Horizontal">
                <Button
                    Height="30"
                    MinWidth="100"
                    Click="Save"
                    Content="{DynamicResource Save}"
                    Style="{StaticResource ButtonSuccess}" />
                <Button
                    Height="30"
                    MinWidth="100"
                    Click="Apply"
                    Content="{DynamicResource Apply}"
                    Style="{StaticResource ButtonPrimary}" />
            </StackPanel>
        </Grid>
    </Grid>
</super:BaseWindow>
